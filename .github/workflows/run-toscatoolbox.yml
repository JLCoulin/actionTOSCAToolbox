name: run-toscatoolbox
run-name: ${{ github.actor }} - syntax checking
on: [push]
jobs:
  syntax-checking:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12
      - run: |
          # Get Orange-OpenSource/Cloudnet-TOSCA-toolbox code from github
          git clone https://github.com/Orange-OpenSource/Cloudnet-TOSCA-toolbox.git
          cd Cloudnet-TOSCA-toolbox/bin
          bash ./build.sh
      - name: Load cloundnet commands and Launch syntax checking in the directory example
        run: |
          # Load cloundnet commands.
          # Guess where is located the software
          CLOUDNET_BINDIR="$PWD"
          Continue=1
          while [ $Continue -eq 1 ]
          do
            CLOUDNET_RC=$(find "$CLOUDNET_BINDIR" -name cloudnet_rc.sh)
            if [ -z "${CLOUDNET_RC}" ]
            then
              CLOUDNET_BINDIR="${CLOUDNET_BINDIR}/.."
            else
              CLOUDNET_BINDIR=$(dirname "${CLOUDNET_RC}")
              Continue=0
            fi
          done
          source "${CLOUDNET_BINDIR}/cloudnet_rc.sh"

          # Launch syntax checking in the directory example
          cd example
          export _LOG=$(basename "$PWD")_BATCH_MODE-$(date +%F_%H-%M-%S).log
          for filename in $(find . -not -path "./${DeclarativeWorkflows_target_directory}/*" -iname '*.yaml' -o -iname '*.yml' | xargs grep -l 'tosca_definitions_version:') $(find . -iname '*.csar' -o -iname '*.zip')
            do
              echo -e "\n${normal}${magenta}    $(echo $filename | tr [a-z] [A-Z]) ${reset}" | tee -a ${_LOG}
              translate "$filename" 2>&1 | tee -a "${_LOG}"
            done
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: log file of the syntax checking
          path: $_LOG
            