######################################################################
#
# Software Name : Cloudnet TOSCA toolbox
# Version: 1.0
# SPDX-FileCopyrightText: Copyright (c) 2020 Orange
# SPDX-License-Identifier: Apache-2.0
#
# This software is distributed under the Apache License 2.0
# the text of which is available at http://www.apache.org/licenses/LICENSE-2.0
# or see the "LICENSE-2.0.txt" file for more details.
#
# Author: Philippe Merle <philippe.merle@inria.fr>
# Software description: Use case for TOSCA to Cloudnet Translator
######################################################################

tosca_definitions_version: tosca_simple_yaml_1_2

description: Template with a TOSCA Orchestrator selectable database using node template.

# NOTE: node types added.
node_types:
  my.types.MyApplication:
    derived_from: tosca.nodes.Root
    properties:
      admin_user:
        type: string
      admin_password:
        type: string
      db_endpoint_url:
        type: string
        # added to resolve the inconsistency discuted further!
        required: false
    requirements:
      - database_endpoint:
          capability: tosca.capabilities.Endpoint.Database
          node: tosca.nodes.Database
          relationship: tosca.relationships.ConnectsTo

  my.types.nodes.MyDatabase:
    derived_from: tosca.nodes.Database
    properties:
      db_version:
        type: version

topology_template:
  inputs:
    # omitted here for brevity
    # ISSUE: following inputs must be defined as used
    admin_username:
      type: string
    admin_password:
      type: string

  node_templates:
    my_app:
      type: my.types.MyApplication
      properties:
        admin_user: { get_input: admin_username }
        admin_password: { get_input: admin_password }
        # ISSUE: potential inconsistency at runtime!
        # property db_endpoint_url is required, i.e. a value must be set!
        # property url_path of tosca.capabilities.Endpoint.Database is not required, i.e. could have no value!
        # Setting a null value to a required property is an inconsistency!
        # But here the value of url_path will be only known at runtime because
        # the real my_abstract_database node will be determinated by the orchestrator at runtime!
        # To correct this potential inconsistency, db_endpoint_url must be explicitly not required (required: false).
        db_endpoint_url: { get_property: [SELF, database_endpoint, url_path ] }
      requirements:
        - database_endpoint: my_abstract_database

    my_abstract_database:
      type: my.types.nodes.MyDatabase
      node_filter:
        properties:
          - db_version: { greater_or_equal: 5.5 }
      properties: # TODO: remove when node_filter will be supported
        name: my_abstract_database
        db_version: '1.0.0'
      # ISSUE: added to resolve the inconsistency discuted previously!
      capabilities:
        database_endpoint:
          properties:
            url_path: /path
